name: Comment Pull Request

# on: [push]
# on: [pull_request]
on: 
  push: 
    branches: master
  
jobs:
  update_pull_request:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - uses: actions/github-script@v7
        id: update_pull_request
        env:
          headRef: '${{ github.head_ref }}'
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            console.log('pullRequest', pullRequest.body);
            
            const regex = /<!-- PR_BADGES_START -->([\s\S]*?)<!-- PR_BADGES_END -->/;
            const { headRef } =  process.env;
            const query = headRef ? `?branch=${process.env.headRef}` : '';
            const replacement = `![](https://github.com/northwalker/luke-actions-demo/actions/workflows/main.yml/badge.svg${query}) ![](https://github.com/northwalker/luke-actions-demo/actions/workflows/eslint.yml/badge.svg${query})`;
            const newBody = pullRequest.body.replace(regex, `<!-- PR_BADGES_START -->\n${replacement}\n<!-- PR_BADGES_END -->`);
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: newBody,
            });
            return pullRequest.number;
          result-encoding: string
      - name: Result from github-script
        run: echo 'Pull Request id ${{steps.update_pull_request.outputs.result}}'
  update_comment:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Print branch
        run: echo The name of your branch is ${{ github.ref }} or ${{ github.head_ref }}
      - name: Check out code
        uses: actions/checkout@v4
      - name: View context attributes
        uses: actions/github-script@v7
        with:
          script: console.log(context)
      - uses: actions/github-script@v7
        id: update_pull_request_comment
        with:
          script: |
            const { data: list_comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            // comment.user.login === 'github-actions[bot]'
            const bot_comment = list_comments.find(c => c.user.type === 'Bot' && c.user.id == 41898282 );
            const now = new Date().toLocaleString('zh', { timeZone: 'Asia/Taipei' });

            // const data = await github.rest.issues.updateComment({
            //   owner: context.repo.owner,
            //   repo: context.repo.repo,
            //   comment_id: bot_comment.id,
            //   body: `Updated from Github Actions. \n ${now}`,
            // });
            // console.log('updateComment data', data);
            
            github.rest.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: bot_comment.id,
            });
            console.log('Delete comment id', bot_comment.id);
            
            const { data } = await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Created from Github ActionsðŸ‘‹ \n ${now}`
            })
            console.log('Create comment id', data.id);

            return data.id;
          result-encoding: string
      - name: Log pull request comment id
        run: echo 'New created comment id ${{steps.update_pull_request_comment.outputs.result}}'
        